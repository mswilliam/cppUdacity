" All system-wide defaults are set in $VIMRUNTIME/debian.vim and sourced by
" the call to :runtime you can find below.  If you wish to change any of those
" settings, you should do it in this file (/etc/vim/vimrc), since debian.vim
" will be overwritten everytime an upgrade of the vim packages is performed.
" It is recommended to make changes after sourcing debian.vim since it alters
" the value of the 'compatible' option.

" This line should not be removed as it ensures that various options are
" properly set to work with the Vim-related packages available in Debian.
runtime! debian.vim

" Vim will load $VIMRUNTIME/defaults.vim if the user does not have a vimrc.
" This happens after /etc/vim/vimrc(.local) are loaded, so it will override
" any settings in these files.
" If you don't want that to happen, uncomment the below line to prevent
" defaults.vim from being loaded.
" let g:skip_defaults_vim = 1

" Uncomment the next line to make Vim more Vi-compatible
" NOTE: debian.vim sets 'nocompatible'.  Setting 'compatible' changes numerous
" options, so any other options should be set AFTER setting 'compatible'.
"set compatible

" Vim5 and later versions support syntax highlighting. Uncommenting the next
" line enables syntax highlighting by default.
if has("syntax")
  syntax on
endif

" If using a dark background within the editing area and syntax highlighting
" turn on this option as well
"set background=dark

" Uncomment the following to have Vim jump to the last position when
" reopening a file
"if has("autocmd")
"  au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif
"endif

" Uncomment the following to have Vim load indentation rules and plugins
" according to the detected filetype.
"if has("autocmd")
"  filetype plugin indent on
"endif

" The following are commented out as they cause vim to behave a lot
" differently from regular Vi. They are highly recommended though.
"set showcmd		" Show (partial) command in status line.
set showmatch		" Show matching brackets.
"set ignorecase		" Do case insensitive matching
"set smartcase		" Do smart case matching
"set incsearch		" Incremental search
"set autowrite		" Automatically save before commands like :next and :make
"set hidden		" Hide buffers when they are abandoned
"set mouse=a		" Enable mouse usage (all modes)

" Source a global configuration file if available
if filereadable("/etc/vim/vimrc.local")
  source /etc/vim/vimrc.local
endif

"Désactive la compatibilité avec vi
set nocompatible

"adapte les couleurs pour un fond noir
set background=dark

"Active la coloration syntaxique
syntax on

"Affiche les numéros de lignes
set number

"Indentation toutes les deux colonnes
set tabstop=2

"Conversion des tabulations en espaces
set expandtab

"Indentation de deux colonnes
set shiftwidth=2

"Indentation "intelligents"
set smartindent

"Conserve l'indentation courante sur les nouvelles lignes
set autoindent

"retours arrières intelligents
set backspace=indent,eol,start

"Indentation à la marque de Tab la plus proche
set shiftround

"Ignore la casse lors de recherche
set ignorecase

"affiche le mode d'édition
set showmode

"affiche la position du curseur
set ruler

"affiche les commandes incomplète
set showcmd

"Ctrl-m maximize la fenetre courrante (:help map)
map <C-m> :resize<CR>

"Ctrl-b aller au tampon suivant (:help map)
map <C-b> :bNext<CR>

------------------------------------

autocompletion

#install ctags
sudo apt update
sudo apt-get install exuberant-ctags

#Get plugin Vim
(https://www.vim.org/scripts/script.php?script_id=1520)

#copy in ~/.vim
mkdir -p ~/.vim/tags
mv omnicpp*zip ~/.vim
cd ~/.vim
unzip omnicpp*zip
cd -

#For STL Download and install tag
(https://www.vim.org/scripts/script.php?script_id=2358)
tar xjvf cpp_src.tar.bz2 -R cpp_src && mv cpp_src ~/.vim/tags/stl

#Generate tags for installed libraries OpenGL, SDL and QT if needed
ctags -R --c++-kinds=+p --fields=+iaS --extra=+q --language-force=C++ /usr/include/GL/ && mv tags ~/.vim/tags/gl ctags -R --c++-kinds=+p --fields=+iaS --extra=+q --language-force=C++ /usr/include/SDL/ && mv tags ~/.vim/tags/sdl ctags -R --c++-kinds=+p --fields=+iaS --extra=+q --language-force=C++ /usr/include/qt4/ && mv tags ~/.vim/tags/qt4

#Configuration. In ~/.vimrc add the following lines
" prérequis tags set nocp filetype plugin on
" configure tags - add additional tags here or comment out not-used ones
"set tags+=~/.vim/tags/stl
"set tags+=~/.vim/tags/gl
"set tags+=~/.vim/tags/sdl
"set tags+=~/.vim/tags/qt4

" build tags of your own project with CTRL+F12
map <C-F12> :!ctags -R --c++-kinds=+p --fields=+iaS --extra=+q .<CR>
noremap <F12> :!ctags -R --c++-kinds=+p --fields=+iaS --extra=+q .<cr>
inoremap <F12> <Esc>:!ctags -R --c++-kinds=+p --fields=+iaS --extra=+q .<cr>
" OmniCppComplete
let OmniCpp_NamespaceSearch = 1
let OmniCpp_GlobalScopeSearch = 1
let OmniCpp_ShowAccess = 1
let OmniCpp_MayCompleteDot = 1
let OmniCpp_MayCompleteArrow = 1
let OmniCpp_MayCompleteScope = 1
let OmniCpp_DefaultNamespaces = ["std", "_GLIBCXX_STD"]
" automatically open and close the popup menu / preview window au CursorMovedI,InsertLeave * if pumvisible() == 0|silent! pclose|endif
set completeopt=menuone,menu,longest,preview

#Comment ungenerated tags.eg ~/.vim/tags/gl et ~/.vim/tags/sdl
set tags+=~/.vim/tags/stl "set tags+=~/.vim/tags/gl "set tags+=~/.vim/tags/sdl set tags+=~/.vim/tags/qt4


